<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bzs.dao.VerificationMapper">
  <resultMap id="BaseResultMap" type="com.bzs.model.Verification">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="money" jdbcType="VARCHAR" property="money" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="pay_account_id" jdbcType="INTEGER" property="payAccountId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="verification_time" jdbcType="TIMESTAMP" property="verificationTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="verification_by" jdbcType="VARCHAR" property="verificationBy" />
    <result column="is_pay" jdbcType="VARCHAR" property="isPay" />
  </resultMap>
  <select id="getVerificationList" resultType="map">
    SELECT
      v.id as vid,
      v.money,
      v.`status`,
      v.pay_account_id,
      v.description,
      v.create_time,
      v.verification_time,
      v.create_by,
      v.verification_by,
      v.is_pay as isPay,
      p.id,p.name,p.amount,p.type,p.account_id
      FROM
      verification v
      LEFT JOIN pay_account p on v.pay_account_id=p.id
<where>
 v.create_by=#{accountId}
</where>
  </select>

  <select id="getListByAdmin" resultType="map">
    SELECT
        v.id,
        v.money,
        v.`status`,
        v.pay_account_id,
        v.description,
        v.create_time,
        v.verification_time,
        v.create_by,
        v.verification_by,
        a.account_id,
        a.user_name,
        a.mobile,
        a.login_name,
        a.invite_code_level,
        a.UPDATED_TIME,
        a.inviteCode,
        a.superiorInviteCode,
        a.superior,
        a.association_level,
        a.balance_total,
        a.commission_total,
        p.amount,
        p.`name`,
        v.is_pay as isPay,
        p.type
        FROM
        verification v LEFT JOIN account_info a on v.create_by=a.account_id
        LEFT JOIN pay_account p on p.id=v.pay_account_id
        <where>
          <if test="userName!=null and userName!=''">
--                 a.user_name LIKE CONCAT(CONCAT('%', #{userName}), '%')
              a.user_name=#{userName}
          </if>
        </where>
  </select>


    <sql id="update">
        <trim prefix="set" suffixOverrides=",">
            <if test="status!=null and ''!=status"> status=#{status},</if>
            <if test="isPay!=null and isPay!='' "> is_pay=#{isPay},</if>
            <if test="verificationTime!=null"> verification_time=#{verificationTime},</if>
            <if test="userName!=null and ''!=userName"> verification_by=#{userName},</if>
        </trim>
    </sql>
  <update id="updateVerificationStatus">
    update verification
      <include refid="update"/>
    <where>
      id in
      <foreach item="item" collection="id" separator="," open="(" close=")">
        #{item}
      </foreach>
    </where>
  </update>

    <sql id="updateItems">
        <trim prefix="set" suffixOverrides=",">
            <if test="money!=null and ''!=money"> money=#{money},</if>
            <if test="status!=null and ''!=status"> status=#{status},</if>
            <if test="payAccountId!=null "> money=#{payAccountId},</if>
            <if test="description!=null and ''!=description"> description=#{description},</if>
            <if test="verificationTime!=null"> verification_time=#{verificationTime},</if>
            <if test="createBy!=null and ''!=createBy"> create_by=#{createBy},</if>
            <if test="verificationBy!=null and ''!=verificationBy"> verification_by=#{verificationBy},</if>
        </trim>
    </sql>
  <update id="updateVerification" parameterType="com.bzs.model.Verification">
    update verification <include refid="updateItems"/> where id=#{id}
  </update>

    <select id="getVeriftcationDetail" resultType="map">
        SELECT
            a.draw_percentage_total,
            a.balance_total,
            a.commission_total,
            a.user_name,
            v.id,
            v.money,
            v.`status`,
            v.pay_account_id,
            v.description,
            v.create_time,
            v.verification_time,
            v.create_by,
            v.verification_by,
            v.is_pay as isPay,
            p.amount,
            p.`name`,
            p.type,
            a.account_id
            FROM
            verification AS v
            left JOIN   account_info AS a on  a.account_id = v.create_by
            LEFT JOIN pay_account p on v.pay_account_id=p.id
            <where>
                <if test="id!=null and id!=''">v.id=#{id}</if>
            </where>

    </select>
</mapper>