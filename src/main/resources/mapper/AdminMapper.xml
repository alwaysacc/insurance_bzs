<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bzs.dao.AdminMapper">
  <resultMap id="BaseResultMap" type="com.bzs.model.Admins">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_pwd" jdbcType="VARCHAR" property="loginPwd" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="descripition" jdbcType="VARCHAR" property="descripition" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="role_id" jdbcType="BIGINT" property="status" />
  </resultMap>
  <resultMap id="adminAndRoleResultMap" type="com.bzs.model.query.AdminAndRole">
    <result column="code" jdbcType="VARCHAR" property="roleCode" />
  </resultMap>
  <select id="getAdminLoginName" resultType="String">
    select login_name from admins
  </select>
  <update id="updateLoginTime">
    update admins set last_login_time=#{loginTime}
    <where>
      login_name=#{loginName}
    </where>
  </update>
  <update id="updateAdmin">
     update admins a
    <trim prefix="set" suffixOverrides=",">
      <if test="name!=null and name!=''">a.name=#{name}, </if>
      <if test="loginName!=null and loginName!=''">a.login_name=#{loginName}, </if>
      <if test="loginPwd!=null and loginPwd!=''">a.login_pwd=#{loginPwd}, </if>
      <if test="roleId!=null and roleId!=''">a.role_id=#{roleId}, </if>
      <if test="status!=null and status!=''">a.status=#{status}, </if>
    </trim>
    <where>
      id=#{id}
    </where>
  </update>
  <select id="getAdminList" resultType="map">
    select a.id,
      a.name,
      a.login_name AS loginName,
      a.login_pwd AS loginPwd,
      a.mobile,
      a.sex,
      a.descripition,
      a.create_time,
      a.update_time,
      a.last_login_time,
      a.status,
      a.role_id AS roleId,r.name as role_name from  admins a left join admin_role r on a.role_id=r.id
  <where>
    <if test="adminName!=null and adminName!=''">
      a.name LIKE CONCAT(CONCAT('%', #{adminName}), '%');
    </if>
  </where>
  </select>
  <select id="adminAndRoleByAdminId" resultMap="adminAndRoleResultMap">
    select a.*,r.code from admins a left  join admin_role r on  a.role_id=r.id where a.id=#{adminId}
  </select>

</mapper>