<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bzs.dao.AccountInfoMapper">
    <resultMap id="BaseResultMap" type="com.bzs.model.AccountInfo">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="account_id" jdbcType="VARCHAR" property="accountId"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="ancestor_id" jdbcType="VARCHAR" property="ancestorId"/>
        <result column="account_state" jdbcType="VARCHAR" property="accountState"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="login_pwd" jdbcType="VARCHAR" property="loginPwd"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="area_code" jdbcType="VARCHAR" property="areaCode"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="wechat" jdbcType="VARCHAR" property="wechat"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="delete_status" jdbcType="TINYINT" property="deleteStatus"/>
        <result column="UPDATED_BY" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy"/>
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime"/>
        <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime"/>
    </resultMap>
    <select id="getRoleIdByAccountId" resultType="String">
      select role_id from account_id where account_id=#{account_id}
    </select>

    <select id="getUserInfo" resultType="map">
        SELECT
            account_info.account_id,
            account_info.role_id,
            account_info.role_name,
            account_info.parent_id,
            account_info.ancestor_id,
            account_info.account_state,
            account_info.login_name,
            account_info.login_pwd,
            account_info.user_name,
            account_info.area_code,
            account_info.mobile,
            account_info.id_card,
            account_info.wechat,
            account_info.email,
            account_info.delete_status,
            account_info.UPDATED_BY,
            account_info.CREATED_BY,
            account_info.REVISION,
            account_info.CREATED_TIME,
            account_info.UPDATED_TIME
            FROM
            account_info
            where
            account_info.login_name = #{username},
            account_info.login_pwd = #{password},
            account_info.delete_status = 0,
    </select>

    <!--查询 账号和对应的第三方账号 开始-->
    <resultMap id="accountAndThridAccountResultMap" type="com.bzs.model.query.AccountAndThirdAccount" extends="BaseResultMap">
        <collection property="thridAccounts" ofType="com.bzs.model.ThirdInsuranceAccountInfo" resultMap="com.bzs.dao.ThirdInsuranceAccountInfoMapper.BaseResultMap" columnPrefix="b_"/>
    </resultMap>
    <select id="getAccountAndThridAccount" resultMap="accountAndThridAccountResultMap" parameterType="com.bzs.model.AccountInfo" >
      select
        a.* ,
        b.third_insurance_id as  b_third_insurance_id,
        b.account_id  as b_account_id
        from account_info a
        left  join  third_insurance_account_info b
        on a.account_id = b.account_id
      <if test="accountId!=null and accountId!=''"> where a.account_id=#{accountId}</if>
    </select>
    <!--查询 账号和对应的第三方账号 结束-->

    <!-- 根据id 存在则更新不存在则修改 开始-->
    <sql id="insertItems">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            account_id,
            <if test="roleId!=null and ''!=roleId ">role_id,</if>
            <if test="roleName!=null and ''!=roleName ">role_name,</if>
            <if test="parentId!=null and ''!=parentId ">parent_id,</if>
            <if test="ancestorId!=null and ''!=ancestorId ">ancestor_id,</if>
            <if test="accountState!=null and ''!=accountState ">account_state,</if>
            <if test="loginName!=null and ''!=loginName ">login_name,</if>
            <if test="loginPwd!=null and ''!=loginPwd ">login_pwd,</if>
            <if test="userName!=null and ''!=userName ">user_name,</if>
            <if test="areaCode!=null and ''!=areaCode ">area_code,</if>
            <if test="mobile!=null and ''!=mobile ">mobile,</if>
            <if test="idCard!=null and ''!=idCard ">id_card,</if>
            <if test="wechat!=null and ''!=wechat ">wechat,</if>
            <if test="email!=null and ''!=email ">email,</if>
            <if test="deleteStatus!=null and ''!=deleteStatus ">delete_status,</if>
            <if test="updatedBy!=null and ''!=updatedBy ">UPDATED_BY,</if>
            <if test="createdBy!=null and ''!=createdBy ">CREATED_BY,</if>
            <if test="loginTime!=null and ''!=loginTime ">login_time,</if>
            <if test="createdTime!=null and ''!=createdTime ">CREATED_TIME,</if>
            <if test="updatedTime!=null and ''!=updatedTime ">UPDATED_TIME,</if>
        </trim>
    </sql>
    <sql id="insertValues">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{accountId},
            <if test="roleId!=null and ''!=roleId ">#{roleId},</if>
            <if test="roleName!=null and ''!=roleName ">#{roleName},</if>
            <if test="parentId!=null and ''!=parentId ">#{parentId},</if>
            <if test="ancestorId!=null and ''!=ancestorId ">#{ancestorId},</if>
            <if test="accountState!=null and ''!=accountState ">#{accountState},</if>
            <if test="loginName!=null and ''!=loginName ">#{loginName},</if>
            <if test="loginPwd!=null and ''!=loginPwd ">#{loginPwd},</if>
            <if test="userName!=null and ''!=userName ">#{userName},</if>
            <if test="areaCode!=null and ''!=areaCode ">#{areaCode},</if>
            <if test="mobile!=null and ''!=mobile ">#{mobile},</if>
            <if test="idCard!=null and ''!=idCard ">#{idCard},</if>
            <if test="wechat!=null and ''!=wechat ">#{wechat},</if>
            <if test="email!=null and ''!=email ">#{email},</if>
            <if test="deleteStatus!=null and ''!=deleteStatus ">#{deleteStatus},</if>
            <if test="updatedBy!=null and ''!=updatedBy ">#{updatedBy},</if>
            <if test="createdBy!=null and ''!=createdBy ">#{createdBy},</if>
            <if test="loginTime!=null and ''!=loginTime ">#{loginTime},</if>
            <if test="createdTime!=null and ''!=createdTime ">#{createdTime},</if>
            <if test="updatedTime!=null and ''!=updatedTime ">#{updatedTime},</if>
        </trim>
    </sql>
    <insert id="addOrUpdate" parameterType="com.bzs.model.AccountInfo">
        insert into account_info <include refid="insertItems"/> values <include refid="insertValues"/>
        ON DUPLICATE KEY UPDATE
        role_id=values(role_id),
        role_name=values(role_name),
        parent_id=values(parent_id),
        ancestor_id=values(ancestor_id),
        account_state=values(account_state),
        login_name=values(login_name),
        area_code=values(area_code),
        mobile=values(mobile),
        id_card=values(id_card),
        wechat=values(wechat),
        email=values(email),
        delete_status=values(delete_status),
        UPDATED_BY=values(UPDATED_BY),
        CREATED_BY=values(CREATED_BY),
        login_time=values(login_time)
    </insert>
    <!--根据id 存在则更新不存在则修改 结束-->
</mapper>